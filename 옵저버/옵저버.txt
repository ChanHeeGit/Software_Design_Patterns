# = protected member
->상속관계 또는 같은 패키지 내의 클래스에서는 접근 가능

옵저버
notifyObservers메소드 호출 전에 setChange메소드를 호출해 줘야 함

퀴즈
Push 장단점
-> 장점 : 변경사항을 바로 알 수 있다.
-> 단점 : 데이터가 너무 크게 되면 클래스가 통지를 했을 시 전송되는 시간이 매우 느림
Pull 장단점
-> 장점 : 데이터가 큰 경우엔 Push보단 Pull 방식이 유리함
-> 단점 : 통지를 받으면 옵저버가 다시 클래스에서 데이터를 가져와야 함
답:push


Pull방식 display 구현시 weatherdate를 obs로 형변환 
->CurrentConditionDisplay 클래스

1. 옵저버 인터페이스 수정
public interface Observer {
	public void update(Subject subject) //Subject 인터페이스 타입 변수
	);
}


2. timedweatherData,java 생성 후 

public class TimnweatherData extends WeatherData {
    private String measuredTime;

    public void setMeasurements(float temperature, float humidity, float pressure){
        super.setMeasurements(temperature,humidity,pressure);
        measuredTime = new Data().toString();
    }
}

3. CurrentConditionsdisplay의 update메소드 수정, display 수정 

push 방식 : 넘겨질 정보가 늘어나면 인터페이스 수정해야함
3가지 정보를 이용하다 4가지로 늘어날 시 display, observes 등의 인터페이스를
전부 수정해 줘야 함

pull방식 : 정보가 늘어나도 필요로 하는 부분만 수정해도 됌 










